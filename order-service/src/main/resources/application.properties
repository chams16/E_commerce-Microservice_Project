spring.application.name= order-service
spring.datasource.url=jdbc:postgresql://localhost:5432/order-service
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=chams16

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=postgresql
spring.jpa.database-platform= org.hibernate.dialect.PostgreSQLDialect

server.port=8085

eureka.client.service-url.http://localhost:8761/eureka
### eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

## actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


## Resilience 4j configuration
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true


## Resilience4J timeout properties
# resilience4j.circuitbreaker.instances.inventory.slow-call-duration-threshold=3s
## we can use the return type compleatablefeature to return asyncronyse response


spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0
